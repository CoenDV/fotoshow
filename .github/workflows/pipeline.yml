name: Build and Push fotoshow Image

on:
  workflow_dispatch:  # Run manually from GitHub Actions tab
  push:
    branches: [ main ]  # Optional: auto-run on pushes to main

permissions:
  contents: read
  packages: write  # Required for pushing to GHCR
  id-token: write  # Needed for authentication if using OIDC

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/fotoshow
  IMAGE_TAG: latest

jobs:
  build:
    name: Build (compile and test)
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout this pipeline repository
      - name: Checkout pipeline repo
        uses: actions/checkout@v4

      # Step 2: Checkout fotoshow source
      - name: Checkout coendv/fotoshow source
        uses: actions/checkout@v4
        with:
          repository: coendv/fotoshow
          path: fotoshow
          token: ${{ secrets.CHECKOUT_PAT }}  # PAT with repo access
          fetch-depth: 1

      # Step 3: Set up Java
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # Step 4: Build Quarkus project
      - name: Build fotoshow with Maven
        working-directory: fotoshow
        run: mvn -B clean package -DskipTests -Dquarkus.package.type=fast-jar

      # Step 5: Upload workspace for next job
      - name: Upload fotoshow workspace
        uses: actions/upload-artifact@v4
        with:
          name: fotoshow-workspace
          path: fotoshow

  create-image:
    name: Create image (build only)
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Download built workspace
      - name: Download fotoshow workspace
        uses: actions/download-artifact@v4
        with:
          name: fotoshow-workspace
          path: fotoshow

      # Step 2: Build Docker image using Dockerfile in fotoshow/
      - name: Build container image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG fotoshow

      # Step 3: Save image to tar for next stage
      - name: Save Docker image
        run: |
          docker save $IMAGE_NAME:$IMAGE_TAG -o /tmp/image.tar

      # Step 4: Upload built image
      - name: Upload built image
        uses: actions/upload-artifact@v4
        with:
          name: built-image
          path: /tmp/image.tar

  push:
    name: Push image to GHCR
    runs-on: ubuntu-latest
    needs: create-image

    steps:
      # Step 1: Download built image
      - name: Download built image
        uses: actions/download-artifact@v4
        with:
          name: built-image
          path: /tmp

      # Step 2: Load Docker image
      - name: Load image
        run: docker load -i /tmp/image.tar

      # Step 3: Authenticate to GHCR
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Push the image
      - name: Push image to GHCR
        run: docker push $IMAGE_NAME:$IMAGE_TAG